[workspace]
resolver = "2"
members = [
  "crypto/blake2b",
  "crypto/common",
  "crypto/curve25519",
  "crypto/curve25519/macros",
  "crypto/ed25519",
  "crypto/scrypt",
  "crypto/sha256",
  "crypto/sha512",
  "crypto/target_features",
  "crypto/xchacha20",
  "klip",
  "lib/platform",
]
default-members = ["klip"]
metadata.crane.name = "klip"

[workspace.package]
version = "0.1.0"  #:version
authors = ["Isis Ebsen <isis@5ht2.me>"]
license = "MPL-2.0"
publish = false
readme = "README.md"
repository = "https://git.5ht2.me/lmaotrigine/klip"

[workspace.lints.rust]
dead_code = "deny"
deprecated = "deny"
future_incompatible = "deny"
missing_copy_implementations = "deny"
missing_debug_implementations = "deny"
nonstandard_style = "deny"
rust_2018_idioms = "deny"
trivial_casts = "deny"
trivial_numeric_casts = "deny"
unused = "deny"

[workspace.lints.clippy]
all = "deny"
pedantic = "deny"
nursery = "deny"
cargo = "deny"

[workspace.lints.rust.unexpected_cfgs] # for curve25519 build-time cfgs and tests
priority = 1
level = "warn"
check-cfg = ['cfg(disabled)', 'cfg(feature, values("dummy"))']

[workspace.dependencies]
libc = "0.2"
tokio = { version = "1", features = ["macros", "rt-multi-thread", "net", "io-util", "signal", "time"] }
rand_core = { version = "0.6", features = ["getrandom"] }

# our dependency tree is amenable to aggressive optimization without much
# compile time overhead. it still takes a bit, though.
[profile.release]
# on some platforms, opt-level = 2 performs better. i haven't profiled this
# extensively enough to make a decision.
opt-level = 3
debug = 1
split-debuginfo = "packed"
strip = true
debug-assertions = false
overflow-checks = false
lto = "fat"
panic = "abort"
incremental = false
codegen-units = 1
